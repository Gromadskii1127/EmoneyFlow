openapi: 3.0.0
info:
  title: "EMONEYFLOW"
  description: "emoneyflow apis"
  version: "0.0.1"
paths:
  /admin/trx:
    get:
      summary: "List all transactions"
      operationId: "getTransactionList"
      parameters:
        - name: "keyword"
          description: "Search Keyword"
          required: true
          in: "query"
          schema: 
            type: "string"
        - name: "method"
          description: "Method Parameter"
          required: true
          in: "query"
          schema:
            type: "string"
        - name: "currency"
          description: "Currency Parameter"
          required: true
          in: "query"
          schema:
            type: "string"
        - name: "status"
          description: "Status Parameter"
          required: true
          in: "query"
          schema:
            type: "string"
        - name: "start_date"
          description: "Start Date"
          required: true
          in: "query"
          schema:
            type: "string"
        - name: "end_date"
          description: "End Date"
          required: true
          in: "query"
          schema:
            type: "string"
        - name: "per_page"
          description: "Page Count Per Page"
          required: true
          in: "query"
          schema:
            type: "integer"
        - name: "page_num"
          description: "Current Page Number to Show"
          required: true
          in: "query"
          schema:
            type: "integer"
      responses:
        "200":
          description: "A list of transactions"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Failed to get transaction list"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        credentials: ${executionCredentials}
        responses:
          default:
            statusCode: "200"
        uri: ${getTransactionListInvokeArn}
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /admin/company:
    get:
      summary: "List all companies"
      operationId: "getCompanyList"
      parameters:
        - name: "keyword"
          description: "Search Keyword"
          required: true
          in: "query"
          schema: 
            type: "string"
        - name: "per_page"
          description: "Page Count Per Page"
          required: true
          in: "query"
          schema:
            type: "integer"
        - name: "page_num"
          description: "Current Page Number to Show"
          required: true
          in: "query"
          schema:
            type: "integer"
      responses:
        "200":
          description: "A list of companies"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: "Failed to get company list"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        credentials: ${executionCredentials}
        responses:
          default:
            statusCode: "200"
        uri: ${getCompanyListInvokeArn}
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /admin/company/{company_id}:
    get:
      summary: "Get company by id"
      operationId: "getCompanyById"
      parameters:
        - name: "company_id"
          description: "Company ID"
          required: true
          in: "path"
          schema: 
            type: "integer"
      responses:
        "200":
          description: "Company Info"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  info:
                    $ref: "#/components/schemas/CompanyInfo"
                  api:
                    $ref: "#/components/schemas/CompanyApi"
                  user:
                    $ref: "#/components/schemas/CompanyUser"
        "400":
          description: "Failed to get company info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        credentials: ${executionCredentials}
        responses:
          default:
            statusCode: "200"
        uri: ${getCompanyByIdInvokeArn}
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    put:
      summary: "Update company by id"
      operationId: "updateCompanyById"
      parameters:
        - name: "company_id"
          description: "Company ID"
          required: true
          in: "path"
          schema: 
            type: "integer"
        - name: "body"
          in: "body"
          schema:
            type: "object"
            properties:
              info:
                $ref: "#/components/schemas/CompanyInfo"
              api:
                $ref: "#/components/schemas/CompanyApi"
              user:
                $ref: "#/components/schemas/CompanyUser"
      responses:
        "200":
          description: "Updated company"
        "400":
          description: "Failed to update company info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        credentials: ${executionCredentials}
        responses:
          default:
            statusCode: "200"
        uri: ${updateCompanyByIdInvokeArn}
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      summary: "Delete company by id"
      operationId: "deleteCompanyById"
      parameters:
        - name: "company_id"
          description: "Company ID"
          required: true
          in: "path"
          schema: 
            type: "integer"
      responses:
        "200":
          description: "Company Info"
        "400":
          description: "Failed to get company info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        credentials: ${executionCredentials}
        responses:
          default:
            statusCode: "200"
        uri: ${deleteCompanyByIdInvokeArn}
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
        
components:
  schemas:
    Transaction:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        company:
          type: "string"
        beneficiary:
          type: "string"
        method: 
          type: "string"
        number:
          type: "string"
        amount:
          type: "integer"
        currency:
          type: "string"
        status:
          type: "string"
          enum:
            - "all"
            - "success"
            - "pending"
            - "declined"
            - "error"
    Company:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        email:
          type: "string"
        contact_person:
          type: "string"
        sepa:
          type: "string"
        oct_russia:
          type: "string"
        cc_europe:
          type: "integer"
        mx_pagaflex:
          type: "string"
    CompanyInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        email:
          type: "string"
        contact_person:
          type: "string"
        bank_name:
          type: "string"
        iban:
          type: "string"
        bic:
          type: "string"
        account_no:
          type: "integer"
        routing_no:
          type: "integer"
    CompanyAPI:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        company_id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        password:
          type: "string"
        fee_type:
          type: "string"
        fee_amount:
          type: "integer"
    CompanyUser:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        company_id:
          type: "integer"
          format: "int64"
        contact_person:
          type: "string"
        email:
          type: "string"
        status:
          type: "boolean"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
